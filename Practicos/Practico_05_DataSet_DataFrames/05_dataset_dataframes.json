{"paragraphs":[{"text":"%md\n### Ejercicio 1\n##### (problema con dataset de ejercicio de práctico anterior) \n\n[DBPedia](http://wiki.dbpedia.org/) es una síntesis estructurada de las relaciones que aparecen en la Wikipedia.\nEstructura sus datos en 2 tipos de archivos:\n* **Propiedades** - Archivo que contiene 3-uplas con (sujeto,relación,predicado), por ejemplo (Aristoteles, Año de nacimiento, -384)\n* **Tipos** - Archivo que contiene 3-uplas con (sujeto, sintaxis de tipo, tipo del sujeto).\n\nEn los *Archivos de prueba* de la materia hay extractos de los mismos (`mappingbased_properties_en.nt` y `instance_types_en.nt`).\n\nAnalizar el formato de estos archivos sanearlos para crear los RDD teniendo en cuenta que:\n* no se pueden modificar a mano los archivos.\n* puede haber lineas basura. Son las que no comienzan con el caracter `<`\n* puede haber lineas en blanco.\n* cada linea termina con un punto que hay que descartar.\n* un sujeto puede aparecer en varias lineas con distintas relacion/predicado en `mappingbased_properties_en.nt`\n* un sujeto puede tener varios tipos en `instance_types_en.nt`.\n* La sintaxis de tipo en el archivo `instance_types_en.nt` no hay que tenerla en cuenta en el algoritmo.\n\nEl programa debe contar la cantidad de propiedades (lineas en el archivo `mappingbased_properties_en.nt`) por tipo del sujeto utilizando solo la API de datasets.\n\nA continuación se presentan los tipos que deben ser usados:\n\n","dateUpdated":"2017-10-09T23:33:12-0300","config":{"colWidth":12,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Ejercicio 1</h3>\n<h5>(problema con dataset de ejercicio de práctico anterior)</h5>\n<p><a href=\"http://wiki.dbpedia.org/\">DBPedia</a> es una síntesis estructurada de las relaciones que aparecen en la Wikipedia.<br/>Estructura sus datos en 2 tipos de archivos:<br/>* <strong>Propiedades</strong> - Archivo que contiene 3-uplas con (sujeto,relación,predicado), por ejemplo (Aristoteles, Año de nacimiento, -384)<br/>* <strong>Tipos</strong> - Archivo que contiene 3-uplas con (sujeto, sintaxis de tipo, tipo del sujeto).</p>\n<p>En los <em>Archivos de prueba</em> de la materia hay extractos de los mismos (<code>mappingbased_properties_en.nt</code> y <code>instance_types_en.nt</code>).</p>\n<p>Analizar el formato de estos archivos sanearlos para crear los RDD teniendo en cuenta que:<br/>* no se pueden modificar a mano los archivos.<br/>* puede haber lineas basura. Son las que no comienzan con el caracter <code>&lt;</code><br/>* puede haber lineas en blanco.<br/>* cada linea termina con un punto que hay que descartar.<br/>* un sujeto puede aparecer en varias lineas con distintas relacion/predicado en <code>mappingbased_properties_en.nt</code><br/>* un sujeto puede tener varios tipos en <code>instance_types_en.nt</code>.<br/>* La sintaxis de tipo en el archivo <code>instance_types_en.nt</code> no hay que tenerla en cuenta en el algoritmo.</p>\n<p>El programa debe contar la cantidad de propiedades (lineas en el archivo <code>mappingbased_properties_en.nt</code>) por tipo del sujeto utilizando solo la API de datasets.</p>\n<p>A continuación se presentan los tipos que deben ser usados:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1507597234164_1868899105","id":"20161012-151316_948997702","dateCreated":"2017-10-09T22:00:34-0300","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:101","user":"anonymous","dateFinished":"2017-10-09T23:32:58-0300","dateStarted":"2017-10-09T23:32:57-0300"},{"text":"case class Propiedad (sujeto: String, verbo: String, predicado: String)\ncase class Tipo(entidad: String, tipo: String)\ncase class Tipos(entidad: String, tipos: Array[String])\ncase class PropTipo (sujeto: String, tipo: String, verbo: String, predicado: String)\n\n// cargar SparkSparkSession\nval inPropRaw : Dataset[String] = spark.read.text(\"./doc/mappingbased_properties_en.nt\").as[String]\n","dateUpdated":"2017-10-09T23:33:41-0300","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1507597234165_1868514356","id":"20161012-152148_2089763876","dateCreated":"2017-10-09T22:00:34-0300","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:102","user":"anonymous","dateFinished":"2017-10-09T23:33:43-0300","dateStarted":"2017-10-09T23:33:41-0300","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"defined class Propiedad\ndefined class Tipo\ndefined class Tipos\ndefined class PropTipo\n<console>:27: error: not found: type Dataset\n       val inPropRaw : Dataset[String] = spark.read.text(\"./doc/mappingbased_properties_en.nt\").as[String]\n                       ^\n"}]}},{"text":"%md\n### Ejercicio 2\n\nUtilizando los datos anteriores producir una salida que agregue a las propiedades los tipos del sujeto como un arreglo, de forma tal que cada linea tenga la información de la 4-upla (sujeto, [tipos del sujeto], relación, predicado).\n\n","dateUpdated":"2017-10-09T23:33:35-0300","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Ejercicio 2</h3>\n<p>Utilizando los datos anteriores producir una salida que agregue a las propiedades los tipos del sujeto como un arreglo, de forma tal que cada linea tenga la información de la 4-upla (sujeto, [tipos del sujeto], relación, predicado).</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1507597234166_1869668603","id":"20161012-151343_1004804411","dateCreated":"2017-10-09T22:00:34-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:103","user":"anonymous","dateFinished":"2017-10-09T23:33:35-0300","dateStarted":"2017-10-09T23:33:35-0300"},{"text":"","dateUpdated":"2017-10-09T22:00:34-0300","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1507597234167_1869283854","id":"20161012-152134_884516682","dateCreated":"2017-10-09T22:00:34-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:104"}],"name":"Práctico 5 - Datasets","id":"2CWCN5W2Z","angularObjects":{"2CTEYBEU9:shared_process":[],"2CVG6DW5Y:shared_process":[],"2CV5WTXTS:shared_process":[],"2CTU7X96J:shared_process":[],"2CTP1KP9A:shared_process":[],"2CUSPRK2N:shared_process":[],"2CTN8WXTW:shared_process":[],"2CTPVRNUN:shared_process":[],"2CWGNZV35:shared_process":[],"2CVTVCASK:shared_process":[],"2CUN4VY52:shared_process":[],"2CWR6RMD5:shared_process":[],"2CTV5EHA4:shared_process":[],"2CUTDCFNQ:shared_process":[],"2CTMXK2C8:shared_process":[],"2CWW6FP8K:shared_process":[],"2CWMAY8ZQ:shared_process":[],"2CTF5TQPJ:shared_process":[],"2CWY8STEM:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}